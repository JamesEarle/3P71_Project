<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BoardPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>